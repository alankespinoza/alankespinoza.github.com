inset_element(p = img, left = 0.05, bottom = 0.65, right = 0.5, top = 0.95)
# printing graph with image
print (img_graph)
# Library EVERY day--------------------------------------------------
library(dplyr)
library(ggplot2)
library(readr)
library(lubridate)
library(tidytext)
library(wordcloud2)
library(ggthemes)
library(cowplot)
library(magick)
# Read in data-------------------------------------------------------
elon <- read_csv("https://raw.githubusercontent.com/databrew/intro-to-data-science/main/data/elon_musk.csv")
# Start messing with data--------------------------------------------
names(elon)
elonhours<-elon %>% mutate(hour = hour(date)) %>% group_by(hour) %>% tally(name = 'count') %>% arrange(desc(count))
ggplot(data = elonhours, aes(x = hour, y = count, color = hour)) +
geom_line(stat = 'identity') +
theme(legend.position = 'none') +
labs(title = 'Elon Musks Tweets',
subtitle = '2010-2022',
caption = 'He doesnt sleep',
y = 'Number of Tweets',
x = 'Hour of day') +
theme_clean()+
theme(legend.position ='none')
# Number of likes over the years
elonlikes<-elon %>% mutate(year = year(date)) %>% filter(year<2022) %>% group_by(year) %>% summarise(totalLikes = sum(nlikes))
options(scipen=999)
graph<-ggplot(data = elonlikes, aes( x = year, y = totalLikes)) +
geom_line() +
geom_point()+
labs(title = 'Number of likes over the years',
subtitle = '2010-2022',
caption = 'He already peaked ;( @DataLab2022 ',
y = 'Number of likes',
x = 'Year')+
theme_cowplot()+
geom_area(fill = "lightblue", alpha = .2) +
scale_x_binned( n.breaks = 10 )+
theme(axis.text.x =element_text(angle = 25) )
# loading the required libraries
library("jpeg")
library("patchwork")
# specifying the image path
path <- "D:/DataLab_2022/BootCamp/AdobeStock_316959789_Preview_Editorial_Use_Only.jpeg"
# read the jpef file from device
img <- readJPEG(path, native = TRUE)
# adding image to graph
img_graph <- graph +
inset_element(p = img, left = 0.05, bottom = 0.65, right = 0.5, top = 0.95)
# printing graph with image
print (img_graph)
# Specify image path
# Download any jpeg image and copy path to this pictuer into path object
path<-'D:/DataLab_2022/BootCamp/0129896_elon-musk.jpeg'
install.packages('rmarkdown')
# Library EVERY day--------------------------------------------------
library(rmarkdown)
#### This is a subtitle
```{r, echo = FALSE}
source("~/.active-rstudio-document", echo=TRUE)
# Library EVERY day--------------------------------------------------
library(dplyr)
library(ggplot2)
library(babynames)
library(ggthemes)
# Take a peek at babynames
names(babynames)
# Start exploring data-----------------------------------------------
babynames %>% filter( year == 1880 ) %>%
group_by(sex) %>%
tally()
# New data frame
df<- babynames %>%
group_by( year , sex ) %>%
tally()
head(df)
# Plot this new data
ggplot( data = df, aes( year, n, color = sex)) +
geom_line() +
labs( title = 'Year vs Count of Unique Babie names by SEX',
subtitle = 'June 2 2022',
caption = 'alan.co',
y = 'Unique Baby Names')
# Use facet_wrap to create a graph for each layer
# In this case, one for female and one for male
ggplot(data = df, aes(year , n)) +
geom_line() +
facet_wrap(~sex, ncol = 1) +
labs( title = " Year vs Count of Unique Baby names by SEX",
subtitle = 'June 2 2022',
caption = 'DataLab 2022',
x = 'Year',
y = 'Count of Unique Baby Names')
# More examples using babynames data frame
# Getting rid of prop column
babynames<- babynames %>%
select(-prop)
head(babynames)
# Total number of babies of each sex per year
babys_per_year<-babynames %>% group_by(sex,year) %>%
summarise( count = sum(n))
# Plot of over time, total amount of babies
# Using color = sex
ggplot( data = babys_per_year, aes ( year, count, color = sex)) +
geom_line() +
labs ( title = 'Total Amount of Babies over Years',
subtitle = 'June 2 2022',
caption = 'DataLab 2022',
x = 'Year',
y = 'Count')
# Using facet_wrap
ggplot( data = babys_per_year, aes ( year, count)) +
geom_line() +
facet_wrap(~sex, ncol = 1) +
labs ( title = 'Total Amount of Babies over Years',
subtitle = 'June 2 2022',
caption = 'DataLab 2022',
x = 'Year',
y = 'Count')
# Each summarize you loose a variable
# This gives you the total number of babies
babynames %>%
group_by(year, sex) %>%
summarize(total = sum(n)) %>%
summarize ( total = sum(total)) %>%
summarize (total = sum(total))
# Plot number of babies with a certain name with a certain sex over years
TexBabies<-babynames %>%
filter( name == 'Tex', sex == 'M')
# Tex Plot
ggplot( data = TexBabies, aes( year, n)) +
geom_line( color = 'dark blue') +
labs( title = 'Frequency of Name Tex over years',
subtitle = 'June 2 2022',
caption = "DataLab 2022",
x = 'Year',
y = 'Count')
# Boomers
babynames %>% filter(year >= 1950 & year < 1960) %>%
group_by(name, sex) %>%
summarize(total = sum(n)) %>%
arrange(desc(total))
# Plot this over time Mary Linda Patricia
boomers<- babynames %>%
filter(name == "Mary" | name == "Patricia" | name == "Linda", sex == "F")
ggplot(data = boomers, aes( year, n, color = name)) +
geom_line() +
labs(title = 'Most popular female names from Boomer Gen',
subtitle = 'June 2 2022',
caption = 'Datalab 2022',
y = 'Count',
x = 'Year') +
facet_wrap(~name , ncol = 1) +
theme( legend.position = 'none') +
scale_color_manual( values = c("darkblue", "darkolivegreen3", "magenta")) +
theme_pander()
# Gen X
genx<-babynames %>% filter(year >= 1965 & year <= 1981) %>%
group_by(sex, name) %>%
summarize(total = sum(n)) %>%
slice_max(order_by = total, n =5)
# Make vector from Generation x top 5 female names.
genx_top5f<-genx %>% filter (sex == "F") %>%
pull(name) # creates vector
# Pull all data from babynames that match with name in top 5 vector
df<- babynames %>%
filter(name %in% genx_top5)
# Plot using this new data frame
ggplot(data = df, aes( x = year, y = n, color = name)) +
geom_line() +
facet_wrap(~name) +
theme(legend.position = "none")
# Gen-z data set
genzM<- babynames %>% filter( year >= 1997 & year <= 2012) %>%
group_by(sex,name) %>%
filter(sex == "M") %>%
summarise(total = sum(n)) %>%
slice_max(order_by = total, n =5)
genzF<- babynames %>% filter( year >= 1997 & year <= 2012) %>%
group_by(sex,name) %>%
filter(sex == "F") %>%
summarise(total = sum(n)) %>%
slice_max(order_by = total, n =5)
# Vector of top 10 names
genz_top5M<-genzM %>% pull(name)
genz_top5F<-genzF %>% pull(name)
# Full data of top 10 names
zdfF<-babynames %>%
filter(name %in% genz_top5F, sex == "F")
zdfM<-babynames %>%
filter(name %in% genz_top5M, sex == "M" )
df<-rowbind(zdfF,zdfM)
# Plotted top 10 names of my generation over the year
ggplot(data = zdfF, aes(x = year, y = n, color = name)) +
geom_line(data =zdfM , aes(x = year, y = n , color = name)) +
facet_wrap(~name) +
theme(legend.position = "none")
# Data set of my names over the years
me<- babynames %>% filter(sex == "M", name == "Alan")
# Plot of my name over the years
ggplot(data = me, aes(x = year, y = n)) +
geom_area(alpha = 0.7, fill = 'darkolivegreen3', color = 'grey')
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(babynames)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(babynames)
library(ggthemes)
# turn off echo (code isn't seen, just output) and turn off warning messages and normal messages
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(dplyr)
library(ggplot2)
library(babynames)
library(ggthemes)
# Take a peek at babynames
names(babynames)
View(babynames)
# Start exploring data-----------------------------------------------
babynames %>% filter( year == 1880 ) %>%
group_by(sex) %>%
tally()
# New data frame
df<- babynames %>%
group_by( year , sex ) %>%
tally()
head(df)
# Plot this new data
ggplot( data = df, aes( year, n, color = sex)) +
geom_line() +
labs( title = 'Year vs Count of Unique Babie names by SEX',
subtitle = 'June 2 2022',
caption = 'alan.co',
y = 'Unique Baby Names')
# Use facet_wrap to create a graph for each layer
# In this case, one for female and one for male
ggplot(data = df, aes(year , n)) +
geom_line() +
facet_wrap(~sex, ncol = 1) +
labs( title = " Year vs Count of Unique Baby names by SEX",
subtitle = 'June 2 2022',
caption = 'DataLab 2022',
x = 'Year',
y = 'Count of Unique Baby Names')
# More examples using babynames data frame
# Getting rid of prop column
babynames<- babynames %>%
select(-prop)
View(babynames)
View(df)
library(babynames)
View(babynames)
# turn off echo (code isn't seen, just output) and turn off warning messages and normal messages
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(dplyr)
library(ggplot2)
library(babynames)
library(ggthemes)
# Take a peek at babynames
names(babynames)
View(babynames)
head(babynames)
library(knitr)
# Start exploring data-----------------------------------------------
babynames %>% filter( year == 1880 ) %>%
group_by(sex) %>%
tally()
# New data frame
df<- babynames %>%
group_by( year , sex ) %>%
tally()
head(df)
# Plot this new data
ggplot( data = df, aes( year, n, color = sex)) +
geom_line() +
labs( title = 'Year vs Count of Unique Babie names by SEX',
subtitle = 'June 2 2022',
caption = 'alan.co',
y = 'Unique Baby Names')
# Use facet_wrap to create a graph for each layer
# In this case, one for female and one for male
ggplot(data = df, aes(year , n)) +
geom_line() +
facet_wrap(~sex, ncol = 1) +
labs( title = " Year vs Count of Unique Baby names by SEX",
subtitle = 'June 2 2022',
caption = 'DataLab 2022',
x = 'Year',
y = 'Count of Unique Baby Names')
# More examples using babynames data frame
# Getting rid of prop column
babynames<- babynames %>%
select(-prop)
head(babynames)
# Total number of babies of each sex per year
babys_per_year<-babynames %>% group_by(sex,year) %>%
summarise( count = sum(n))
# Plot of over time, total amount of babies
# Using color = sex
ggplot( data = babys_per_year, aes ( year, count, color = sex)) +
geom_line() +
labs ( title = 'Total Amount of Babies over Years',
subtitle = 'June 2 2022',
caption = 'DataLab 2022',
x = 'Year',
y = 'Count')
library(pander)
library(dplyr)
library(leaflet)
library(ggplot2)
library(ggthemes)
library(flexdashboard)
library(knitr)
library(plotly)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(readr)
# Greenhouse gas emissions by country-year, 1750 - 2020
ghg <- read_csv('https://raw.githubusercontent.com/ericmkeen/capstone/master/co2.csv')
# Greenhouse gas emissions by country-year-sector, 1990 - 2018
sectors <- read_csv('https://raw.githubusercontent.com/ericmkeen/capstone/master/co2_sectors.csv')
View(sectors)
View(ghg)
# Greenhouse gas emissions by country-year, 1750 - 2020
continents<-read_csv("D:\DataLab_2022\BootCamp\Day8\csvData.csv")
# Greenhouse gas emissions by country-year, 1750 - 2020
continents<-read_csv("D:/DataLab_2022/BootCamp/Day8/csvData.csv")
View(continents)
View(continents)
rename(ghg$Entity, "Country")
rename(ghg$Entity, Country)
rename(ghg$Entity, Country)
rename(ghg$Entity, ghg$Country)
ghg<-ghg %>% rename(Entity, country)
ghg<-ghg %>% rename(Entity, country)
rename(ghg, Entity = country)
ghg<-ghg %>% rename(country = Entity)
data<-merge(ghg,continents, by = "country")
View(data)
#Rename columns
ghg1<-ghg %>% rename(country = Entity)
library(dplyr)
library(dplyr)
#Rename columns
ghg1<-ghg %>% rename(country = Entity)
# Libraries
library(readr)
library(dplyr)
library(ggplot2)
library(reshape2)
# Greenhouse gas emissions by country-year from 1750 - 2020
ghg <- read_csv('https://raw.githubusercontent.com/ericmkeen/capstone/master/co2.csv')
# Greenhouse gas emissions by country-year-sector from 1990 - 2018
sectors <- read_csv('https://raw.githubusercontent.com/ericmkeen/capstone/master/co2_sectors.csv')
#Rename columns
ghg1<-ghg %>% rename(country = Entity)
#Read in data
continents<-read_csv("https://github.com/alankespinoza/DataLab_2022/blob/master/BootCamp/Day8/csvData.csv")
#Merge with continent to have country to its continent
data1<-merge(ghg1,continents, by = "country")
#Data that will give me total co2 for each continent
data1<-data1 %>% group_by(continent) %>% filter(Year >1999) %>%
summarize(total = sum(`Annual CO2 emissions (zero filled)`))
#Rename columns
ghg1<-ghg %>% rename(country = Entity)
#Read in data
continents<-read_csv("https://github.com/alankespinoza/DataLab_2022/blob/master/BootCamp/Day8/csvData.csv")
#Merge with continent to have country to its continent
data1<-merge(ghg1,continents, by = "country")
View(ghg1)
View(continents)
#Read in data
continents<-read_csv("https://github.com/alankespinoza/DataLab_2022/blob/master/BootCamp/Day8/csvData.csv?raw=true")
View(continents)
#Merge with continent to have country to its continent
data1<-merge(ghg1,continents, by = "country")
View(data1)
# Figure out the long-term trends in CO2 emissions over year by region
ltd <- data1 %>%
group_by(continent, Year) %>%
summarise(totalco2 = sum (`Annual CO2 emissions (zero filled)`))
View(ltd)
View(data1)
View(continents)
# Chunk 1
# Libraries
library(readr)
library(dplyr)
library(ggplot2)
library(reshape2)
# Greenhouse gas emissions by country-year from 1750 - 2020
ghg <- read_csv('https://raw.githubusercontent.com/ericmkeen/capstone/master/co2.csv')
# Greenhouse gas emissions by country-year-sector from 1990 - 2018
sectors <- read_csv('https://raw.githubusercontent.com/ericmkeen/capstone/master/co2_sectors.csv')
# Chunk 2
#Entity with highest co2
ent <- sectors %>%
filter(year >= 2000
& entity != 'World'
& entity != 'European Union (27)') %>%
group_by(entity) %>%
summarize(total = sum(co2, na.rm = TRUE)/1000000000) %>%
arrange(desc(total)) %>%
head(10) %>%
arrange(total) %>%
mutate(entity = factor(entity, levels = entity))
options(scipen = 999)
# Chunk 3
ggplot(data = ent) +
geom_col(aes(x = entity, y = total, color = entity)) +
coord_flip() +
labs(y = "Total Co2 in Billions", x = "Entity", title = "Entities With Highest Co2 Emissions") +
scale_color_hue() +
theme(legend.position = "none")
# Chunk 4
#Entity with lowest co2
entLow <- sectors %>%
filter(year >= 2000
& entity != 'World'
& entity != 'European Union (27)') %>%
group_by(entity) %>%
summarize(total = sum(co2, na.rm = TRUE)/1000000000) %>%
arrange(total) %>%
head(10) %>%
arrange(desc(total)) %>%
mutate(entity = factor(entity, levels = entity))
options(scipen = 999)
# Chunk 5
ggplot(data = entLow) +
geom_col(aes(x = entity, y = total, color = entity)) +
coord_flip() +
labs(y = "Total Co2 in Billions", x = "Entity", title = "Entities With Lowest Co2 Emissions") +
scale_color_hue() +
theme(legend.position = "none")
# Chunk 6
#Sector with highest/lowest
sect <- sectors %>%
filter(year >= 2000) %>%
group_by(sector) %>%
summarize(total = sum(co2, na.rm = TRUE)/1000000000) %>%
arrange(total) %>%
mutate(sector = factor(sector, levels = sector))
options(scipen = 999)
# Chunk 7
ggplot(data = sect) +
geom_col(aes(x = sector, y = total, color = sector)) +
coord_flip() +
labs(y = "Total Co2 in Billions", x = "Sector", title = "Economic Sectors and Their Co2 Emissions") +
scale_color_hue() +
theme(legend.position = "none")
# Chunk 8
#Rename columns
ghg1<-ghg %>% rename(country = Entity)
#Read in data
continents<-read_csv("https://github.com/alankespinoza/DataLab_2022/blob/master/BootCamp/Day8/csvData.csv?raw=true")
#Merge with continent to have country to its continent
data1<-merge(ghg1,continents, by = "country")
#Data that will give me total co2 for each continent
data1<-data1 %>% group_by(continent) %>% filter(Year >1999) %>%
summarize(total = sum(`Annual CO2 emissions (zero filled)`))
#Graph
ggplot(data = data1, aes(x = continent, y = total/1000000000, fill = continent)) +
geom_bar( stat = 'identity') +
theme(legend.position = 'none') +
labs(title = 'Cotinent with highest C02 Emission' ,
subtitle = 'June 10 2022' ,
caption = 'DataLab 2022 | Alan, Kenedi, Shelby, Tilina') +
ylab('Total in Billions') +
xlab('Continents')
# Chunk 9
sect <- sectors %>%
group_by(sector, year) %>%
summarize(total = sum(co2, na.rm = TRUE)/1000000000)
# Chunk 10
ggplot(data = sect) +
geom_line(aes(x = year, y = total, color = sector)) +
labs(title = 'Long Term Carbon Emissions by Sector',
x = 'Year', y = 'Co2 in Billions')
# Chunk 11
count <- sectors %>%
filter(entity == 'China' |
entity == 'United States' |
entity == 'India' |
entity == 'Russia' |
entity == 'Japan') %>%
group_by(entity, year) %>%
summarize(total = sum(co2, na.rm = TRUE)/1000000000)
ggplot(data = count) +
geom_line(aes(x = year, y = total, color = entity)) +
labs(title = 'Long Term Carbon Emissions by County',
x = 'Year', y = 'Co2 in Billions')
View(continents)
View(data1)
# Figure out the long-term trends in CO2 emissions over year by region
data <- merge(ghg,continents,by = 'country')
View(ghg)
View(ghg)
setwd("D:/citio")
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site(encoding = "UTF-8")
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
